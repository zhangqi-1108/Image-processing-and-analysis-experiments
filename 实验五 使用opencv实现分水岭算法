import numpy as np
import cv2
from matplotlib import pyplot as plt

# 读取图像
image = cv2.imread('input_image.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# 图像预处理
ret, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)
kernel = np.ones((3, 3), np.uint8)
opening = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel, iterations=2)

# 确定背景区域
sure_bg = cv2.dilate(opening, kernel, iterations=3)

# 查找未知区域
dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 5)
ret, sure_fg = cv2.threshold(dist_transform, 0.7 * dist_transform.max(), 255, 0)

# 找到未知区域
sure_fg = np.uint8(sure_fg)
unknown = cv2.subtract(sure_bg, sure_fg)

# 标记分水岭区域
ret, markers = cv2.connectedComponents(sure_fg)
markers = markers + 1
markers[unknown == 255] = 0

# 应用分水岭算法
markers = cv2.watershed(image, markers)
image[markers == -1] = [0, 0, 255]

# 显示结果
plt.subplot(2, 2, 1), plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB)), plt.title('Original Image')
plt.xticks([]), plt.yticks([])
plt.subplot(2, 2, 2), plt.imshow(thresh, cmap='gray'), plt.title('Thresholded Image')
plt.xticks([]), plt.yticks([])
plt.subplot(2, 2, 3), plt.imshow(sure_bg, cmap='gray'), plt.title('Sure Background')
plt.xticks([]), plt.yticks([])
plt.subplot(2, 2, 4), plt.imshow(markers, cmap='jet'), plt.title('Segmented Image')
plt.xticks([]), plt.yticks([])

plt.tight_layout()
plt.show()
